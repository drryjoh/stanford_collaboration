#include <cmath>
#include <algorithm>
#include <array>
#include <iostream>  // For printing the result to the console
#include "types_inl.h"
#include "multiply_divide.h"
#include "pow_gen.h"
#include "exp_gen.h"
#include "array_handling.h"
#include "constants.h"
#include "thermally_perfect.h"
#include "arrhenius.h"
#include "third_body.h"
#include "falloff_troe.h"
#include "falloff_lindemann.h"
#include "falloff_sri.h"
#include "pressure_dependent_arrhenius.h"
#include "direct.h"
#include "reactions.h"
#include "source.h"
#include "chemical_state_functions.h"
#include "default_parameters.h"
#include "rk4.h"
#include "linear_solvers.h"
#include "backward_euler.h"
#include "sdirk.h"
#include "rosenbroc.h"
#include "yass.h"

// Overload << operator for std::array
template <typename T, std::size_t N>
std::ostream& operator<<(std::ostream& os, const std::array<T, N>& arr) {
    os << "[ ";
    for (const auto& value : arr) 
    {
        os << value << " ";
    }
    os << "]";
    return os;
}

int main() {
    std::cout << "*** ChemGen ***" <<std::endl;
    Species species  = {double(0.00191649340980198),double(0.0016153982980309134),double(0.002034693087807602),double(0.0018222259676737892),double(0.000342906808860044),double(0.00043962978908173623),double(0.0010535222655757301),double(0.00032047698619092123),double(0.00106153040172697),double(0.0019505136745121745),double(0.00046086939759735476),double(0.0014851183238119474),double(0.001451775393483647),double(0.000948283459957059),double(0.0021559631092771536),double(0.0003906303424848713),double(0.0008231510934891802),double(0.0007608897049075969),double(0.0003074536654991467),double(0.0019392538155806882),double(0.0010412531981565142),double(0.00016027625159678068),double(0.00017438745861942664),double(0.0005315808609128503),double(0.0011603862505601547),double(0.0009504061904220113),double(0.0018976692905534394),double(0.0007986390701689095),double(0.00028340524359529804),double(0.0009594494298571504)};
    double temperature_ =  2938.6284476438727;
    Species result = source_species(species, temperature_);


    double pressure_return = pressure(species, temperature_);
    double int_energy = internal_energy_volume_specific(species, temperature_);
    std::cout << "temperature: " << temperature_<<std::endl;
    for(int i=0; i<10; ++i)
    {
        std::cout << "temperature_ for "<< i <<" iterations: " << (temperature_ - temperature(int_energy, species, i)) / (temperature_)<<std::endl;
    }
    // Output the result
    std::cout << "Source test result:  " << result << std::endl;
    std::cout << "Cantera test result: " <<"1205085.9387387473 1776908.5343351185 -2106525.7485058927 -25631.23284956375 960919.7989228804 180726.87929963588 -413471.5642721998 404185.95351719286 -1029559.2446311206 -744671.1881096101 8094204.181850179 -310995.7652659155 8162225.043318917 566384.237540301 -326450.34675506636 1277489.1232215762 -1192310.0369902852 -357737.4016821402 1526643.7254079687 -945101.697605889 -171325.1270778884 2761.982756684534 -191826.73005342126 -220603.59869093218 58397.60817991027 -7048431.602837819 87997.24108901114 -224569.2824361931 97219.03021381289 0.0"<<std::endl;

    
    std::cout << "ChemGen internal energy: "<< int_energy <<std::endl;
    std::cout << "Cantera internal energy: " <<"8035029.237355566"<<std::endl;

    
    std::cout << "Chemgen species cps: " << species_specific_heat_constant_pressure_mass_specific(temperature_) <<std::endl;
    std::cout << "Cantera species cps: " <<"18300.831930021177 20621.18704899117 1308.1308497701004 1246.2701423179085 2171.071484460603 3143.1390884483667 1818.0662069560276 3179.492829993555 3938.46449319828 4149.439351575847 5208.055002380123 7122.719548105421 1328.7446177941208 1413.0496667764078 2196.119090949369 2652.7172838338774 3345.419154106596 2525.1285764095605 3306.9686132469355 3788.2767745162355 4490.366966637169 5007.8794188838165 5613.3290259314945 2011.2456355553024 2471.376191204573 2869.248203917837 3043.0179889284295 3752.962504298654 3266.152464732143 1322.0636119657388"<<std::endl;

    
    std::cout << "Chemgen species enthalpies: " << species_enthalpy_mass_specific(temperature_) <<std::endl;
    std::cout << "Cantera species enthalpies: " <<"42864609.029125646 270716849.9593126 19030282.180119954 2990542.3862293544 7339116.707440332 -6532192.9516253695 4498016.214643446 53027838.067444205 36987188.64773773 39803607.67466319 21305928.41967855 9695451.676476277 -687598.9167933498 -5554165.543947671 6313012.052503147 2305824.1638975255 8221805.493412513 28676653.354734544 16224011.922588347 19380463.641775437 11664191.246367674 15013272.102858778 9273341.553846583 9136677.450652042 4540454.768249544 6203193.004179262 22808392.805898234 12985644.206612945 16528955.115133436 3229262.6467882413"<<std::endl;
    
    std::cout << "Chemgen species internal energies: " << species_internal_energy_mass_specific(temperature_) <<std::endl;
    std::cout << "Cantera species internal energies: " <<"30745007.651855472 246477647.20477232 17503116.958757576 2226959.775548166 5902466.129644327 -7888458.084935204 3757753.3419361603 51151110.486479715 35245325.35718546 38061744.38411092 19680845.853893604 8172474.903018901 -1559898.680326969 -6109350.082941437 5471013.417980553 1492092.1857260522 7434503.941032007 27700500.083596844 15285648.132106105 18477072.5164121 10793259.601091538 14172548.258093217 8460800.270954112 8541168.996227693 3959225.937063288 5635575.014248336 21870029.01541599 12375807.282200696 15903379.25481194 2357087.435230568"<<std::endl;

    std::cout << "Chemgen species internal entropies: " << species_entropy_mass_specific(temperature_) <<std::endl;
    std::cout << "Cantera species internal entropies: " <<"91936.98777661515 144334.40025014483 12030.932112964865 8341.139851117674 14074.447691496169 14933.569143385717 9687.846107656713 18617.455444911662 19894.981078637633 19502.76428967463 20604.271288704287 20825.20991478926 9141.528760133402 7181.770377291548 10927.19991521652 11215.122558246772 12711.215179684132 12645.58084327146 12908.423975342252 14361.112382269186 14438.289753470508 15812.631796532904 15837.301424962365 9428.0568856712 10002.854255744034 10683.848377708815 13283.384163431669 12071.679218933952 12006.050984256288 8900.310154886287"<<std::endl;

    
    std::cout << "Chemgen species gibbs energy: " << species_gibbs_energy_mole_specific(temperature_) <<std::endl;
    std::cout << "Cantera species gibbs energy: " <<"-458244941.902116 -154655751.18609488 -261170190.70219427 -688627948.9763805 -578585889.4719666 -908251519.1631553 -791185636.256236 -21897256.6106904 -301254634.76928025 -245581493.64276412 -590009022.910826 -826248232.1285716 -771707862.3695903 -1173223620.7630298 -748605449.1043572 -920334553.492138 -904074203.0929095 -212354776.51453248 -565260243.5250684 -617230552.5516797 -863069464.4371217 -914121307.2766209 -1120606750.6300821 -761862524.9858955 -1044796732.8635458 -1084418384.1109965 -422506590.65690285 -901003185.1033128 -732411231.1590383 -642233331.26954"<<std::endl;
    
    std::cout << "Chemgen species gibbs reactions : " << gibbs_reaction(log_gen(temperature_)) <<std::endl;
    std::cout << "Cantera species gibbs reactions : " <<"0.1443786348800081 -0.5658921211952491 -0.5658921211952491 -1.0672580023466076 -0.5013658811513583 6.095556425733091 -6.8058271818083425 -6.661448546928339 7.162814428079697 7.162814428079697 2.1322725723266447 -8.227828998059735 -8.649342484374975 -9.150708365526334 -8.793721119254984 -9.295087000406342 -9.295087000406342 -5.744071510492654 1.0617556713156926 0.9173770364356895 0.9173770364356895 -7.731965447939292 -7.275296434217438 -13.37085285995053 -13.936744981145779 -13.019367944710089 -14.438110862297135 -5.143023861890794 -15.007261882156724 -26.32886269307464 -12.392117711928869 0.9917610256488479 -4.4966357424362675 -5.928082471020457 -12.24773907704886 -25.26710702175895 -26.184484058194638 -19.523035511266304 1.2991627226404785 -13.309494748364553 -5.488396768085116 -21.225067292990406 -7.987101499015912 -2.059019027995456 -16.636443983390894 0.6071596576479745 -21.080688658110393 -20.163311621674705 -7.84272286413591 -26.258868047407802 -28.243503086190096 -16.238784165558144 -11.134988765473905 -11.38791543133652 -2.2785935395407995 -3.2703545651896477 -23.503660832531203 -10.265695038556713 -1.6714338818928252 -2.2785935395407995 -2.2785935395407995 -9.198437036210109 -2.2785935395407995 -2.2785935395407995 -11.1830720749924 -0.6987791871712903 -12.672073672779238 -5.396777238561805 -12.672073672779238 -5.962669359757049 -6.464035240908408 2.8310517594979347 -10.527542618075616 -4.789617580913825 -7.068211120454625 -7.41519664664814 -3.033170486950575 -3.339052488198452 -9.160153277859136 -21.832226950638375 -1.674417659994582 0.6041758795462177 -8.594261156663892 -5.471325060525096 -4.152783125736932 4.640937993518052 -9.015774642979132 -6.547671682586783 -5.175825956624405 -7.4544194961652055 2.431588925288537 4.552877563566953 -10.61434892241589 -2.6402733010271615 -6.99526408956884 -13.090820515301937 -4.496559358638044 -3.8923834790918264 -13.656712636497186 -14.158078517648542 -4.8629915172422 -10.334316577767297 -3.5791823222023593 -2.7565039375346383 -3.3223960587298875 -3.823761939881246 -6.940568868510196 -2.1493442798866638 -4.427937819427464 -4.774923345620983 -8.113975833819437 -13.100258961251688 -5.1396476916828755 -2.018419408086345 -25.347998038300553 -4.124364583183921 -27.628025415715122 -7.043234233133133 -26.56626974439943 -14.390059621740638 -13.691280434569343 -22.64174228828287 -13.335231173312376 -23.940905010923345 5.842629759870473 4.202715714886248 -3.6871204047917794 -10.0900785275165 -2.2758599515333877 0.9511614057397326 -8.917026748673276 -10.925202435908368 -5.675014342238411 -5.8426297598704755 -8.118489711403862 -15.801355530134158 1.1527700290547684 -0.8453683320631429 -6.641166797139889 -1.411260453258387 -6.896841539547423 -7.827244453610296 -15.801320074999024 -1.9126263344097454 -5.7237897607042 -2.1446074385018408 -13.188838479726666 -3.731949674121865 -10.298272140619337 -4.455642380748864 -13.140024213347976 -11.365530142965946 -5.844446029342087 -1.7704533718389919 -1.7704533718389919 -16.45879495175798 -10.419795856213973 -6.334197031539628 -2.070443142559604 -14.86022067232122 -22.135517106538654 -27.532294345100457 -7.745457484798015 -12.995645578467974 -7.5417682030847 -11.349289091720529 -4.073992657503095 -14.688341579918985 -11.369570841508985 -17.09336060221318 -11.870936722660343 -11.349289091720529 -19.08125453965981 -2.575849722254 -8.047174782779095 -0.7236927066269989 4.2403067521062425 -2.363606751611225 -8.77394490214856 -4.699952244645466 -3.984327321234735 5.864222246448509 -3.4308647539578323 -2.811275542391512 -13.959322757697285 0.39289718592341333 -2.1212886382784157 -10.335863177839332 -13.713030841426093 -10.901755299034582 -11.403121180185941 -0.05631820492890927 -2.108034179779598 -15.700924778872729 -7.5793592403046945 -1.4225094511071257 -3.9742677874546795 -4.540159908649923 4.253561210605061 -5.041525789801282 -12.711210281997184 -5.6457016693475 -1.2177638499200358 -3.466736768829755 -0.8411577030954359 -3.1197512426362355 -7.244115825820157 -5.69341650902939 -15.240094472330915 -2.244448893862942 -13.251695002202245 -18.169087812455356 -2.7026542847282613 -2.7026542847282613 -7.845678146619055 -7.845678146619055 -8.019614332396703 -0.5703817124016167 -6.986100856345678 -5.525174713331474 -4.076857352588063 -6.091066834526723 -7.763977757379843 -19.342761836728968 -6.592432715678081 -6.352717304121455 -21.330655774175614 -2.7686707757968354 -7.543594121417813 -3.1615679617202486 -4.03504063350405"<<std::endl;

    std::cout << "Pressure: " <<pressure_return <<std::endl;
    std::cout << "Temperature Monomial at 300           : " <<temperature_monomial(double(300)) <<std::endl;
    std::cout << "Temperature Energy Monomial at 300           : " <<temperature_energy_monomial(double(300)) <<std::endl;
    std::cout << "Temperature Entropy Monomial at 300           : " <<temperature_entropy_monomial(double(300)) <<std::endl;
    std::cout << "Temperature Gibbs Monomial at 300           : " <<temperature_gibbs_monomial(double(300)) <<std::endl;
    
    return 0;
}
            